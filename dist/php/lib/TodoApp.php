<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a448
 */

use \php\_Boot\HxAnon;
use \todo\ui\SiteFooter;
use \php\Boot;
use \todo\ui\TodoItem;
use \pilot\_VNode\VNode_Impl_;
use \todo\data\Todo;
use \pilot\VNodeType;
use \todo\data\Store;
use \todo\ui\TodoInput;

class TodoApp {
	/**
	 * @return void
	 */
	static public function main () {
		#example/TodoApp.hx:40: characters 7-21
		(new Store(function ($store) {
			#example/TodoApp.hx:39: characters 38-63
			$props = new HxAnon(["className" => "todo-geabW"]);
			$props_store = $store;
			$children = \Array_hx::wrap([VNode_Impl_::_new(new HxAnon([
				"name" => "todos",
				"props" => new HxAnon(),
				"type" => VNodeType::VNodeText(),
			]))]);
			$children1 = VNode_Impl_::_new(new HxAnon([
				"name" => "h1",
				"props" => new HxAnon(["className" => "todo-header-title"]),
				"children" => ($children !== null ? $children : new \Array_hx()),
			]));
			$children2 = \Array_hx::wrap([
				$children1,
				(new TodoInput(new HxAnon([
					"inputClass" => "new-todo",
					"value" => "",
					"save" => function ($value)  use (&$props_store) {
						$props_store->addTodo(new Todo($value));
						return;
					},
				])))->render(),
			]);
			$children3 = \Array_hx::wrap([VNode_Impl_::_new(new HxAnon([
				"name" => "header",
				"props" => new HxAnon(["className" => "todo-header"]),
				"children" => ($children2 !== null ? $children2 : new \Array_hx()),
			]))]);
			$children4 = null;
			if ($store->getTodos()->length > 0) {
				$props1 = new HxAnon(["className" => "todo-ZanwJ"]);
				$props2 = new HxAnon([
					"type" => "todo-toggle",
					"checked" => $store->get_allSelected(),
					"id" => "toggle-all",
				]);
				$children5 = VNode_Impl_::_new(new HxAnon([
					"name" => "input",
					"props" => new HxAnon([
						"type" => "checkbox",
						"className" => $props2->type,
						"checked" => $props2->checked,
						"id" => $props2->id,
					]),
					"children" => new \Array_hx(),
				]));
				$children6 = \Array_hx::wrap([VNode_Impl_::_new(new HxAnon([
					"name" => "Toggle All",
					"props" => new HxAnon(),
					"type" => VNodeType::VNodeText(),
				]))]);
				$children7 = VNode_Impl_::_new(new HxAnon([
					"name" => "label",
					"props" => new HxAnon(["htmlFor" => "toggle-all"]),
					"children" => ($children6 !== null ? $children6 : new \Array_hx()),
				]));
				$props3 = new HxAnon(["className" => "todo-Z4uCq"]);
				$_g = new \Array_hx();
				$_g1 = 0;
				$_g2 = null;
				if ($store->_visibleTodos !== null) {
					$_g2 = $store->_visibleTodos;
				} else {
					$filtered = (clone $store->todos);
					$filtered->arr = array_reverse($filtered->arr);
					$_g21 = null;
					$__hx__switch = ($store->filter->index);
					if ($__hx__switch === 0) {
						$_g21 = $filtered;
					} else if ($__hx__switch === 1) {
						$result = [];
						$i = 0;
						while ($i < $filtered->length) {
							if ($filtered->arr[$i]->complete) {
								$result[] = $filtered->arr[$i];
							}
							++$i;
						}
						$_g21 = \Array_hx::wrap($result);
					} else if ($__hx__switch === 2) {
						$result1 = [];
						$i1 = 0;
						while ($i1 < $filtered->length) {
							if (!$filtered->arr[$i1]->complete) {
								$result1[] = $filtered->arr[$i1];
							}
							++$i1;
						}
						$_g21 = \Array_hx::wrap($result1);
					}
					$store->_visibleTodos = $_g21;
					$_g2 = $store->_visibleTodos;
				}
				while ($_g1 < $_g2->length) {
					$x = (new TodoItem(new HxAnon([
						"todo" => ($_g2->arr[$_g1++] ?? null),
						"store" => $store,
					])))->render();
					$_g->arr[$_g->length] = $x;
					++$_g->length;
				}

				$children8 = \Array_hx::wrap([
					$children5,
					$children7,
					VNode_Impl_::_new(new HxAnon([
						"name" => "ul",
						"props" => $props3,
						"children" => ($_g !== null ? $_g : new \Array_hx()),
					])),
				]);
				$children9 = VNode_Impl_::_new(new HxAnon([
					"name" => "div",
					"props" => $props1,
					"children" => ($children8 !== null ? $children8 : new \Array_hx()),
				]));
				$children4 = \Array_hx::wrap([
					$children9,
					(new SiteFooter(new HxAnon(["store" => $store])))->render(),
				]);
			} else {
				$children4 = new \Array_hx();
			}
			$children10 = $children3->concat($children4);
			$children11 = VNode_Impl_::_new(new HxAnon([
				"name" => "div",
				"props" => $props,
				"children" => ($children10 !== null ? $children10 : new \Array_hx()),
			]));
			$children12 = \Array_hx::wrap([VNode_Impl_::_new(new HxAnon([
				"name" => "Double-click to edit a todo.",
				"props" => new HxAnon(),
				"type" => VNodeType::VNodeText(),
			]))]);
			$children13 = VNode_Impl_::_new(new HxAnon([
				"name" => "p",
				"props" => new HxAnon(),
				"children" => ($children12 !== null ? $children12 : new \Array_hx()),
			]));
			$children14 = VNode_Impl_::_new(new HxAnon([
				"name" => "Written by ",
				"props" => new HxAnon(),
				"type" => VNodeType::VNodeText(),
			]));
			$children15 = \Array_hx::wrap([VNode_Impl_::_new(new HxAnon([
				"name" => "wartman",
				"props" => new HxAnon(),
				"type" => VNodeType::VNodeText(),
			]))]);
			$children16 = \Array_hx::wrap([
				$children14,
				VNode_Impl_::_new(new HxAnon([
					"name" => "a",
					"props" => new HxAnon(["href" => "https://github.com/wartman"]),
					"children" => ($children15 !== null ? $children15 : new \Array_hx()),
				])),
			]);
			$children17 = VNode_Impl_::_new(new HxAnon([
				"name" => "p",
				"props" => new HxAnon(),
				"children" => ($children16 !== null ? $children16 : new \Array_hx()),
			]));
			$children18 = VNode_Impl_::_new(new HxAnon([
				"name" => "Part of ",
				"props" => new HxAnon(),
				"type" => VNodeType::VNodeText(),
			]));
			$children19 = \Array_hx::wrap([VNode_Impl_::_new(new HxAnon([
				"name" => "TodoMVC",
				"props" => new HxAnon(),
				"type" => VNodeType::VNodeText(),
			]))]);
			$children20 = \Array_hx::wrap([
				$children18,
				VNode_Impl_::_new(new HxAnon([
					"name" => "a",
					"props" => new HxAnon(["href" => "http://todomvc.com"]),
					"children" => ($children19 !== null ? $children19 : new \Array_hx()),
				])),
			]);
			$children21 = \Array_hx::wrap([
				$children13,
				$children17,
				VNode_Impl_::_new(new HxAnon([
					"name" => "p",
					"props" => new HxAnon(),
					"children" => ($children20 !== null ? $children20 : new \Array_hx()),
				])),
			]);
			$children22 = \Array_hx::wrap([
				$children11,
				VNode_Impl_::_new(new HxAnon([
					"name" => "footer",
					"props" => new HxAnon(["className" => "todo-HA1SK"]),
					"children" => ($children21 !== null ? $children21 : new \Array_hx()),
				])),
			]);
			return VNode_Impl_::_new(new HxAnon([
				"name" => "div",
				"props" => new HxAnon(["id" => "root"]),
				"children" => ($children22 !== null ? $children22 : new \Array_hx()),
			]));
		}))->update();
	}
}

Boot::registerClass(TodoApp::class, 'TodoApp');
