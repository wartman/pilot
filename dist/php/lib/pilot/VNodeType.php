<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a448
 */

namespace pilot;

use \php\Boot;
use \php\_Boot\HxEnum;

class VNodeType extends HxEnum {
	/**
	 * @return VNodeType
	 */
	static public function VNodeElement () {
		static $inst = null;
		if (!$inst) $inst = new VNodeType('VNodeElement', 0, []);
		return $inst;
	}

	/**
	 * @return VNodeType
	 */
	static public function VNodeFragment () {
		static $inst = null;
		if (!$inst) $inst = new VNodeType('VNodeFragment', 3, []);
		return $inst;
	}

	/**
	 * @return VNodeType
	 */
	static public function VNodePlaceholder () {
		static $inst = null;
		if (!$inst) $inst = new VNodeType('VNodePlaceholder', 4, []);
		return $inst;
	}

	/**
	 * @return VNodeType
	 */
	static public function VNodeRecycled () {
		static $inst = null;
		if (!$inst) $inst = new VNodeType('VNodeRecycled', 2, []);
		return $inst;
	}

	/**
	 * @return VNodeType
	 */
	static public function VNodeText () {
		static $inst = null;
		if (!$inst) $inst = new VNodeType('VNodeText', 1, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			0 => 'VNodeElement',
			3 => 'VNodeFragment',
			4 => 'VNodePlaceholder',
			2 => 'VNodeRecycled',
			1 => 'VNodeText',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'VNodeElement' => 0,
			'VNodeFragment' => 0,
			'VNodePlaceholder' => 0,
			'VNodeRecycled' => 0,
			'VNodeText' => 0,
		];
	}
}

Boot::registerClass(VNodeType::class, 'pilot.VNodeType');
