// Generated by Haxe 4.0.0-rc.3+e3df7a448
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var TodoApp = function() { };
TodoApp.__name__ = true;
TodoApp.main = function() {
	new todo_data_Store(function(store) {
		var props = { className : "_c_HVymbyskFZlJlniUslI7"};
		var props_store = store;
		var children = [pilot__$VNode_VNode_$Impl_$._new({ name : "todos", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children1 = [pilot__$VNode_VNode_$Impl_$._new({ name : "h1", props : { className : "_c_4OpftfpQgnqe6qjpVqUM"}, children : children != null ? children : []}),new todo_ui_TodoInput({ inputClass : "new-todo", value : "", save : function(value) {
			props_store.addTodo(new todo_data_Todo(value));
			return;
		}}).render()];
		var children2 = [pilot__$VNode_VNode_$Impl_$._new({ name : "header", props : { className : "todo-header"}, children : children1 != null ? children1 : []})];
		var children3;
		if(store.getTodos().length > 0) {
			var store1 = store;
			var props1 = { className : "_c_7HEvvMpB5xcgi8hjR5Mp"};
			var props2 = { type : "_c_eMIajhVeIEbyew5lZXbY", checked : store1.get_allSelected(), id : "toggle-all", onClick : function(e) {
				if(store1.get_allSelected() == true) {
					store1.markAllPending();
				} else {
					store1.markAllComplete();
				}
				return;
			}};
			var children31 = pilot__$VNode_VNode_$Impl_$._new({ name : "input", props : { type : "checkbox", className : props2.type, checked : props2.checked, id : props2.id, onClick : props2.onClick}, children : []});
			var children11 = [pilot__$VNode_VNode_$Impl_$._new({ name : "Toggle All", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
			var children32 = pilot__$VNode_VNode_$Impl_$._new({ name : "label", props : { htmlFor : "toggle-all"}, children : children11 != null ? children11 : []});
			var props3 = { className : "_c_8Ydlsy5wCqxTNzZyOHTt"};
			var _g = [];
			var _g1 = 0;
			var _g2;
			if(store1._visibleTodos != null) {
				_g2 = store1._visibleTodos;
			} else {
				var filtered = store1.todos.slice();
				filtered.reverse();
				var _g21;
				switch(store1.filter._hx_index) {
				case 0:
					_g21 = filtered;
					break;
				case 1:
					_g21 = filtered.filter(function(todo1) {
						return todo1.complete;
					});
					break;
				case 2:
					_g21 = filtered.filter(function(todo2) {
						return !todo2.complete;
					});
					break;
				}
				store1._visibleTodos = _g21;
				_g2 = store1._visibleTodos;
			}
			while(_g1 < _g2.length) _g.push(new todo_ui_TodoItem({ todo : _g2[_g1++], store : store1}).render());
			var children33 = [children31,children32,pilot__$VNode_VNode_$Impl_$._new({ name : "ul", props : props3, children : _g != null ? _g : []})];
			children3 = [pilot__$VNode_VNode_$Impl_$._new({ name : "div", props : props1, children : children33 != null ? children33 : []}),new todo_ui_SiteFooter({ store : store}).render()];
		} else {
			children3 = [];
		}
		var children4 = children2.concat(children3);
		var children5 = pilot__$VNode_VNode_$Impl_$._new({ name : "div", props : props, children : children4 != null ? children4 : []});
		var children6 = [pilot__$VNode_VNode_$Impl_$._new({ name : "Double-click to edit a todo.", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children7 = pilot__$VNode_VNode_$Impl_$._new({ name : "p", props : { }, children : children6 != null ? children6 : []});
		var children8 = pilot__$VNode_VNode_$Impl_$._new({ name : "Written by ", props : { }, type : pilot_VNodeType.VNodeText, node : null});
		var children9 = [pilot__$VNode_VNode_$Impl_$._new({ name : "wartman", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children10 = [children8,pilot__$VNode_VNode_$Impl_$._new({ name : "a", props : { href : "https://github.com/wartman"}, children : children9 != null ? children9 : []})];
		var children12 = pilot__$VNode_VNode_$Impl_$._new({ name : "p", props : { }, children : children10 != null ? children10 : []});
		var children13 = pilot__$VNode_VNode_$Impl_$._new({ name : "Part of ", props : { }, type : pilot_VNodeType.VNodeText, node : null});
		var children14 = [pilot__$VNode_VNode_$Impl_$._new({ name : "TodoMVC", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children15 = [children13,pilot__$VNode_VNode_$Impl_$._new({ name : "a", props : { href : "http://todomvc.com"}, children : children14 != null ? children14 : []})];
		var children16 = [children7,children12,pilot__$VNode_VNode_$Impl_$._new({ name : "p", props : { }, children : children15 != null ? children15 : []})];
		var children17 = [children5,pilot__$VNode_VNode_$Impl_$._new({ name : "footer", props : { className : "_c_egp6C0g1CFjghViCU1Cl"}, children : children16 != null ? children16 : []})];
		return pilot__$VNode_VNode_$Impl_$._new({ name : "div", props : { id : "root"}, children : children17 != null ? children17 : []});
	},window.document.getElementById("root")).update();
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var pilot_Differ = function() { };
pilot_Differ.__name__ = true;
pilot_Differ.patch = function(node,vnode) {
	node = pilot_Differ.patchNode(node,node,Reflect.field(node,"__vnode") != null ? Reflect.field(node,"__vnode") : pilot_Differ.recycleNode(node),vnode,false);
	node["__vnode"] = vnode;
	return vnode;
};
pilot_Differ.patchNode = function(parent,node,oldVNode,newVNode,isSvg) {
	if(oldVNode != newVNode) {
		if(oldVNode != null && oldVNode.type == pilot_VNodeType.VNodeText && newVNode.type == pilot_VNodeType.VNodeText) {
			if(oldVNode.name != newVNode.name) {
				node.nodeValue = newVNode.name;
			}
		} else if(oldVNode == null || oldVNode.name != newVNode.name) {
			node = parent.insertBefore(pilot_Differ.createNode(newVNode,isSvg),node);
			if(oldVNode != null && oldVNode.node != null) {
				pilot_Differ.detachNode(parent,oldVNode);
			}
		} else {
			var tmpVChild;
			var oldVChild;
			var oldKey;
			var newKey;
			var oldVProps = oldVNode.props;
			var newVProps = newVNode.props;
			var oldVChildren = oldVNode.children;
			var newVChildren = newVNode.children;
			var oldHead = 0;
			var newHead = 0;
			var oldTail = oldVChildren.length - 1;
			var newTail = newVChildren.length - 1;
			isSvg = isSvg || newVNode.name == "svg";
			var access = pilot_Differ.merge(oldVProps,newVProps);
			var _g_keys = Reflect.fields(access);
			var _g_index = 0;
			while(_g_index < _g_keys.length) {
				var key = _g_keys[_g_index++];
				var k = ({ value : access[key], key : key}).key;
				switch(k) {
				case "checked":case "selected":case "value":
					if(Reflect.field(node,k) != Reflect.field(newVProps,k)) {
						pilot_Differ.patchProperty(node,k,Reflect.field(oldVProps,k),Reflect.field(newVProps,k),isSvg);
					}
					break;
				default:
					if(Reflect.field(oldVProps,k) != Reflect.field(newVProps,k)) {
						pilot_Differ.patchProperty(node,k,Reflect.field(oldVProps,k),Reflect.field(newVProps,k),isSvg);
					}
				}
			}
			while(newHead <= newTail && oldHead <= oldTail) {
				oldKey = pilot_Differ.getKey(oldVChildren[oldHead]);
				if(oldKey == null || oldKey != pilot_Differ.getKey(newVChildren[newHead])) {
					break;
				}
				pilot_Differ.patchNode(node,oldVChildren[oldHead++].node,oldVChildren[oldHead - 1],newVChildren[newHead++],isSvg);
			}
			while(newHead <= newTail && oldHead <= oldTail) {
				oldKey = pilot_Differ.getKey(oldVChildren[oldTail]);
				if(oldKey == null || oldKey != pilot_Differ.getKey(newVChildren[newTail])) {
					break;
				}
				pilot_Differ.patchNode(node,oldVChildren[oldTail--].node,oldVChildren[oldTail + 1],newVChildren[newTail--],isSvg);
			}
			if(oldHead > oldTail) {
				while(newHead <= newTail) {
					var tmp = pilot_Differ.createNode(newVChildren[newHead++],isSvg);
					oldVChild = oldVChildren[oldHead];
					node.insertBefore(tmp,oldVChild != null ? oldVChild.node : null);
				}
			} else if(newHead > newTail) {
				while(oldHead <= oldTail) pilot_Differ.detachNode(node,oldVChildren[oldHead++]);
			} else {
				var keyed = { };
				var newKeyed = { };
				var i = oldHead;
				while(i <= oldTail) {
					oldKey = oldVChildren[i].key;
					if(oldKey != null) {
						keyed[oldKey] = oldVChildren[i];
					}
					++i;
				}
				while(newHead <= newTail) {
					oldVChild = oldVChildren[oldHead];
					oldKey = pilot_Differ.getKey(oldVChild);
					newKey = pilot_Differ.getKey(newVChildren[newHead]);
					if(newKeyed[oldKey] != null || newKey != null && newKey == pilot_Differ.getKey(oldVChildren[oldHead + 1])) {
						if(oldKey == null) {
							pilot_Differ.detachNode(node,oldVChild);
						}
						++oldHead;
						continue;
					}
					if(newKey == null || oldVNode.type == pilot_VNodeType.VNodeRecycled) {
						if(oldKey == null) {
							pilot_Differ.patchNode(node,oldVChild != null ? oldVChild.node : null,oldVChild,newVChildren[newHead],isSvg);
							++newHead;
						}
						++oldHead;
					} else {
						if(oldKey == newKey) {
							pilot_Differ.patchNode(node,oldVChild.node,oldVChild,newVChildren[newHead],isSvg);
							newKeyed[newKey] = true;
							++oldHead;
						} else {
							tmpVChild = keyed[newKey];
							if(tmpVChild != null) {
								pilot_Differ.patchNode(node,node.insertBefore(tmpVChild.node,oldVChild != null ? oldVChild.node : null),tmpVChild,newVChildren[newHead],isSvg);
								newKeyed[newKey] = true;
							} else {
								pilot_Differ.patchNode(node,oldVChild != null ? oldVChild.node : null,null,newVChildren[newHead],isSvg);
							}
						}
						++newHead;
					}
				}
				while(oldHead <= oldTail) {
					oldVChild = oldVChildren[oldHead++];
					if(pilot_Differ.getKey(oldVChild) == null) {
						pilot_Differ.detachNode(node,oldVChild);
					}
				}
				var _g_keys1 = Reflect.fields(keyed);
				var _g_index1 = 0;
				while(_g_index1 < _g_keys1.length) {
					var key1 = _g_keys1[_g_index1++];
					var _g1 = { value : keyed[key1], key : key1};
					if(newKeyed[_g1.key] == null) {
						pilot_Differ.detachNode(node,_g1.value);
					}
				}
			}
		}
	}
	newVNode.node = node;
	return node;
};
pilot_Differ.detachNode = function(parent,vnode) {
	pilot_Differ.doDetachHook(vnode);
	parent.removeChild(vnode.node);
};
pilot_Differ.doDetachHook = function(vnode) {
	if(vnode.hooks.detach != null) {
		vnode.hooks.detach();
	}
};
pilot_Differ.doAttachHook = function(vnode) {
	if(vnode.hooks.attach != null && vnode.node != null) {
		vnode.hooks.attach(vnode);
	}
};
pilot_Differ.getKey = function(vnode) {
	if(vnode == null) {
		return null;
	} else {
		return vnode.key;
	}
};
pilot_Differ.merge = function(a,b) {
	var out = { };
	var access = a;
	var _g_keys = Reflect.fields(access);
	var _g_index = 0;
	while(_g_index < _g_keys.length) {
		var key = _g_keys[_g_index++];
		var _g1 = { value : access[key], key : key};
		out[_g1.key] = _g1.value;
	}
	var access1 = b;
	var _g_keys1 = Reflect.fields(access1);
	var _g_index1 = 0;
	while(_g_index1 < _g_keys1.length) {
		var key1 = _g_keys1[_g_index1++];
		var _g11 = { value : access1[key1], key : key1};
		out[_g11.key] = _g11.value;
	}
	return out;
};
pilot_Differ.recycleNode = function(node) {
	if(node.nodeType == 3) {
		return pilot__$VNode_VNode_$Impl_$._new({ name : node.nodeValue, props : { }, type : pilot_VNodeType.VNodeText, node : node});
	} else {
		var tmp = node.nodeName.toLowerCase();
		var _g = [];
		var _g1 = 0;
		var _g2 = node.childNodes;
		while(_g1 < _g2.length) _g.push(pilot_Differ.recycleNode(_g2[_g1++]));
		return pilot__$VNode_VNode_$Impl_$._new({ name : tmp, props : { }, children : _g, node : node, type : pilot_VNodeType.VNodeRecycled, key : null});
	}
};
pilot_Differ.createNode = function(vnode,isSvg) {
	var node;
	var _g = vnode.type;
	if(_g == null) {
		node = window.document.createElement(vnode.name);
	} else {
		switch(_g._hx_index) {
		case 0:
			node = isSvg || vnode.name == "svg" ? window.document.createElementNS("\"http://www.w3.org/2000/svg",vnode.name) : window.document.createElement(vnode.name);
			break;
		case 1:
			node = window.document.createTextNode(vnode.name);
			break;
		case 3:
			node = window.document.createDocumentFragment();
			break;
		default:
			node = window.document.createElement(vnode.name);
		}
	}
	var access = vnode.props;
	var _g1_keys = Reflect.fields(access);
	var _g1_index = 0;
	while(_g1_index < _g1_keys.length) {
		var key = _g1_keys[_g1_index++];
		var _g2 = { value : access[key], key : key};
		pilot_Differ.patchProperty(node,_g2.key,null,_g2.value,isSvg);
	}
	var _g1 = 0;
	var _g21 = vnode.children;
	while(_g1 < _g21.length) node.appendChild(pilot_Differ.createNode(_g21[_g1++],isSvg));
	vnode.node = node;
	pilot_Differ.doAttachHook(vnode);
	return node;
};
pilot_Differ.patchProperty = function(node,key,oldValue,newValue,isSvg) {
	if(key == "key") {
		return;
	}
	if(StringTools.startsWith(key,"on")) {
		var event = HxOverrides.substr(key,2,null).toLowerCase();
		if(oldValue != null) {
			node.removeEventListener(event,oldValue);
		}
		if(newValue != null) {
			node.addEventListener(event,newValue);
		}
	} else if(!isSvg && key != "list" && Reflect.getProperty(node,key) != null) {
		Reflect.setProperty(node,key,newValue == null ? "" : newValue);
	} else if(newValue == null || newValue == false) {
		node.removeAttribute(key);
	} else {
		if(key == "className") {
			key = "class";
		}
		if(key == "htmlFor") {
			key = "for";
		}
		node.setAttribute(key,newValue);
	}
};
var pilot_StatefulWidget = function() { };
pilot_StatefulWidget.__name__ = true;
pilot_StatefulWidget.prototype = {
	build: function() {
		return null;
	}
	,render: function() {
		this._pilot_vnode = this.build();
		this._pilot_vnode.hooks.attach = $bind(this,this.attached);
		this._pilot_vnode.hooks.detach = $bind(this,this._pilot_detached);
		return this._pilot_vnode;
	}
	,patch: function() {
		if(this._pilot_vnode == null) {
			return;
		}
		if(this._pilot_vnode.node == null) {
			return;
		}
		pilot_Differ.patch(this._pilot_vnode.node,this.render());
	}
	,_pilot_detached: function() {
		this._pilot_vnode = null;
	}
	,attached: function(vnode) {
	}
};
var pilot_StatelessWidget = function() { };
pilot_StatelessWidget.__name__ = true;
pilot_StatelessWidget.prototype = {
	build: function() {
		return null;
	}
	,render: function() {
		var vnode = this.build();
		vnode.hooks.attach = $bind(this,this.attached);
		vnode.hooks.detach = $bind(this,this.detached);
		return vnode;
	}
	,attached: function(vnode) {
	}
	,detached: function() {
	}
};
var pilot__$Style_Style_$Impl_$ = {};
pilot__$Style_Style_$Impl_$.__name__ = true;
pilot__$Style_Style_$Impl_$.compose = function(classes) {
	var _g = classes.filter(function(s) {
		return s != null;
	}).map(function(c) {
		return StringTools.trim(c);
	}).filter(function(c1) {
		if(c1 != null) {
			return c1 != "";
		} else {
			return false;
		}
	}).join(" ");
	if(_g == "") {
		return null;
	} else {
		return _g;
	}
};
var pilot__$StyledWidget_StyledWidget_$Impl_$ = {};
pilot__$StyledWidget_StyledWidget_$Impl_$.__name__ = true;
pilot__$StyledWidget_StyledWidget_$Impl_$._new = function(props) {
	var this1 = props.child;
	if(Object.prototype.hasOwnProperty.call(this1.props,"className")) {
		props.compose.push(Reflect.field(this1.props,"className"));
	}
	this1.props["className"] = pilot__$Style_Style_$Impl_$.compose(props.compose);
	return this1;
};
var pilot_VNodeType = $hxEnums["pilot.VNodeType"] = { __ename__ : true, __constructs__ : ["VNodeElement","VNodeText","VNodeRecycled","VNodeFragment"]
	,VNodeElement: {_hx_index:0,__enum__:"pilot.VNodeType",toString:$estr}
	,VNodeText: {_hx_index:1,__enum__:"pilot.VNodeType",toString:$estr}
	,VNodeRecycled: {_hx_index:2,__enum__:"pilot.VNodeType",toString:$estr}
	,VNodeFragment: {_hx_index:3,__enum__:"pilot.VNodeType",toString:$estr}
};
var pilot__$VNode_VNode_$Impl_$ = {};
pilot__$VNode_VNode_$Impl_$.__name__ = true;
pilot__$VNode_VNode_$Impl_$._new = function(impl) {
	if(impl.type == null) {
		impl.type = pilot_VNodeType.VNodeElement;
	}
	if(impl.children == null) {
		impl.children = [];
	}
	if(Object.prototype.hasOwnProperty.call(impl.props,"key")) {
		impl.key = Reflect.field(impl.props,"key");
		Reflect.deleteField(impl.props,"key");
	}
	if(impl.hooks == null) {
		impl.hooks = { };
	}
	return impl;
};
var todo_data_Store = function(build,node) {
	this._visibleTodos = null;
	this._allSelected = null;
	this.filter = todo_data_VisibleTodos.VisibleAll;
	this.todos = [];
	this.node = node;
	this.build = build;
};
todo_data_Store.__name__ = true;
todo_data_Store.prototype = {
	get_allSelected: function() {
		if(this._allSelected != null) {
			return this._allSelected;
		}
		var tmp;
		if(this._visibleTodos != null) {
			tmp = this._visibleTodos;
		} else {
			var filtered = this.todos.slice();
			filtered.reverse();
			var tmp1;
			switch(this.filter._hx_index) {
			case 0:
				tmp1 = filtered;
				break;
			case 1:
				tmp1 = filtered.filter(function(todo1) {
					return todo1.complete;
				});
				break;
			case 2:
				tmp1 = filtered.filter(function(todo2) {
					return !todo2.complete;
				});
				break;
			}
			this._visibleTodos = tmp1;
			tmp = this._visibleTodos;
		}
		if(tmp.length == 0) {
			this._allSelected = false;
			return this._allSelected;
		}
		var tmp2;
		if(this._visibleTodos != null) {
			tmp2 = this._visibleTodos;
		} else {
			var filtered1 = this.todos.slice();
			filtered1.reverse();
			var tmp3;
			switch(this.filter._hx_index) {
			case 0:
				tmp3 = filtered1;
				break;
			case 1:
				tmp3 = filtered1.filter(function(todo3) {
					return todo3.complete;
				});
				break;
			case 2:
				tmp3 = filtered1.filter(function(todo4) {
					return !todo4.complete;
				});
				break;
			}
			this._visibleTodos = tmp3;
			tmp2 = this._visibleTodos;
		}
		this._allSelected = tmp2.filter(function(t) {
			return !t.complete;
		}).length == 0;
		return this._allSelected;
	}
	,update: function() {
		this._visibleTodos = null;
		this._allSelected = null;
		pilot_Differ.patch(this.node,this.build(this));
	}
	,getTodos: function() {
		return this.todos;
	}
	,addTodo: function(todo1) {
		this.todos.push(todo1);
		this.update();
	}
	,removeTodo: function(todo1) {
		HxOverrides.remove(this.todos,todo1);
		this.update();
	}
	,setFilter: function(filter) {
		this.filter = filter;
		this.update();
	}
	,markAllComplete: function() {
		var _g = 0;
		var _g1;
		if(this._visibleTodos != null) {
			_g1 = this._visibleTodos;
		} else {
			var filtered = this.todos.slice();
			filtered.reverse();
			var _g11;
			switch(this.filter._hx_index) {
			case 0:
				_g11 = filtered;
				break;
			case 1:
				_g11 = filtered.filter(function(todo1) {
					return todo1.complete;
				});
				break;
			case 2:
				_g11 = filtered.filter(function(todo2) {
					return !todo2.complete;
				});
				break;
			}
			this._visibleTodos = _g11;
			_g1 = this._visibleTodos;
		}
		while(_g < _g1.length) _g1[_g++].complete = true;
		this.update();
	}
	,markAllPending: function() {
		var _g = 0;
		var _g1;
		if(this._visibleTodos != null) {
			_g1 = this._visibleTodos;
		} else {
			var filtered = this.todos.slice();
			filtered.reverse();
			var _g11;
			switch(this.filter._hx_index) {
			case 0:
				_g11 = filtered;
				break;
			case 1:
				_g11 = filtered.filter(function(todo1) {
					return todo1.complete;
				});
				break;
			case 2:
				_g11 = filtered.filter(function(todo2) {
					return !todo2.complete;
				});
				break;
			}
			this._visibleTodos = _g11;
			_g1 = this._visibleTodos;
		}
		while(_g < _g1.length) _g1[_g++].complete = false;
		this.update();
	}
	,markComplete: function(todo1) {
		if(todo1.complete) {
			return;
		}
		todo1.complete = true;
		this.update();
	}
	,markPending: function(todo1) {
		if(!todo1.complete) {
			return;
		}
		todo1.complete = false;
		this.update();
	}
	,clearCompleted: function() {
		var toRemove;
		if(this._visibleTodos != null) {
			toRemove = this._visibleTodos;
		} else {
			var filtered = this.todos.slice();
			filtered.reverse();
			var toRemove1;
			switch(this.filter._hx_index) {
			case 0:
				toRemove1 = filtered;
				break;
			case 1:
				toRemove1 = filtered.filter(function(todo1) {
					return todo1.complete;
				});
				break;
			case 2:
				toRemove1 = filtered.filter(function(todo2) {
					return !todo2.complete;
				});
				break;
			}
			this._visibleTodos = toRemove1;
			toRemove = this._visibleTodos;
		}
		var toRemove2 = toRemove.filter(function(t) {
			return t.complete;
		});
		if(toRemove2.length == 0) {
			return;
		}
		var _g = 0;
		while(_g < toRemove2.length) HxOverrides.remove(this.todos,toRemove2[_g++]);
		this.update();
	}
	,__properties__: {get_allSelected:"get_allSelected"}
};
var todo_data_Todo = function(content) {
	this.complete = false;
	this.id = todo_data_Todo.ids++;
	this.content = content;
};
todo_data_Todo.__name__ = true;
var todo_data_VisibleTodos = $hxEnums["todo.data.VisibleTodos"] = { __ename__ : true, __constructs__ : ["VisibleAll","VisibleCompleted","VisiblePending"]
	,VisibleAll: {_hx_index:0,__enum__:"todo.data.VisibleTodos",toString:$estr}
	,VisibleCompleted: {_hx_index:1,__enum__:"todo.data.VisibleTodos",toString:$estr}
	,VisiblePending: {_hx_index:2,__enum__:"todo.data.VisibleTodos",toString:$estr}
};
var todo_ui_SiteFooter = function(props) {
	this._pilot_props = { };
	this._pilot_props.store = props.store;
};
todo_ui_SiteFooter.__name__ = true;
todo_ui_SiteFooter.__super__ = pilot_StatelessWidget;
todo_ui_SiteFooter.prototype = $extend(pilot_StatelessWidget.prototype,{
	build: function() {
		var _gthis = this;
		var children = [this.remaining()];
		var children1 = pilot__$VNode_VNode_$Impl_$._new({ name : "span", props : { className : "_c_oIZrcuMAdmsYnFjj5cKt"}, children : children != null ? children : []});
		var props = { href : "#all", className : this._pilot_props.store.filter == todo_data_VisibleTodos.VisibleAll ? "filter selected" : "filter", onClick : function(e) {
			_gthis.setFilter(e,todo_data_VisibleTodos.VisibleAll);
			return;
		}};
		var children2 = [pilot__$VNode_VNode_$Impl_$._new({ name : "All", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children3 = [pilot__$VNode_VNode_$Impl_$._new({ name : "a", props : props, children : children2 != null ? children2 : []})];
		var children4 = pilot__$VNode_VNode_$Impl_$._new({ name : "li", props : { }, children : children3 != null ? children3 : []});
		var props1 = { href : "#pending", className : this._pilot_props.store.filter == todo_data_VisibleTodos.VisiblePending ? "filter selected" : "filter", onClick : function(e1) {
			_gthis.setFilter(e1,todo_data_VisibleTodos.VisiblePending);
			return;
		}};
		var children5 = [pilot__$VNode_VNode_$Impl_$._new({ name : "Pending", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children6 = [pilot__$VNode_VNode_$Impl_$._new({ name : "a", props : props1, children : children5 != null ? children5 : []})];
		var children7 = pilot__$VNode_VNode_$Impl_$._new({ name : "li", props : { }, children : children6 != null ? children6 : []});
		var props2 = { href : "#pending", className : this._pilot_props.store.filter == todo_data_VisibleTodos.VisibleCompleted ? "filter selected" : "filter", onClick : function(e2) {
			_gthis.setFilter(e2,todo_data_VisibleTodos.VisibleCompleted);
			return;
		}};
		var children8 = [pilot__$VNode_VNode_$Impl_$._new({ name : "Complete", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children9 = [pilot__$VNode_VNode_$Impl_$._new({ name : "a", props : props2, children : children8 != null ? children8 : []})];
		var children10 = [children4,children7,pilot__$VNode_VNode_$Impl_$._new({ name : "li", props : { }, children : children9 != null ? children9 : []})];
		var children11 = pilot__$VNode_VNode_$Impl_$._new({ name : "ul", props : { className : "_c_CeRctLDRQ44Fehn10hmm"}, children : children10 != null ? children10 : []});
		var props3 = { className : "_c_oeIBmfG51xDwFLy8nMsM", onClick : function(e3) {
			_gthis._pilot_props.store.clearCompleted();
			return;
		}};
		var children12 = [pilot__$VNode_VNode_$Impl_$._new({ name : "Clear completed", props : { }, type : pilot_VNodeType.VNodeText, node : null})];
		var children13 = [children1,children11,pilot__$VNode_VNode_$Impl_$._new({ name : "button", props : props3, children : children12 != null ? children12 : []})];
		return pilot__$VNode_VNode_$Impl_$._new({ name : "footer", props : { className : "_c_cnDlJ7lvTIpX2jErVcrQ"}, children : children13 != null ? children13 : []});
	}
	,remaining: function() {
		var _g = this._pilot_props.store.todos.filter(function(todo1) {
			return !todo1.complete;
		}).length;
		switch(_g) {
		case 0:
			return pilot__$VNode_VNode_$Impl_$._new({ name : "No items left", props : { }, type : pilot_VNodeType.VNodeText, node : null});
		case 1:
			return pilot__$VNode_VNode_$Impl_$._new({ name : "1 item left", props : { }, type : pilot_VNodeType.VNodeText, node : null});
		default:
			return pilot__$VNode_VNode_$Impl_$._new({ name : "" + _g + " items left", props : { }, type : pilot_VNodeType.VNodeText, node : null});
		}
	}
	,setFilter: function(e,filter) {
		e.preventDefault();
		this._pilot_props.store.setFilter(filter);
	}
});
var todo_ui_TodoInput = function(props) {
	this._pilot_props = { };
	this._pilot_props.inputClass = props.inputClass == null ? "edit" : props.inputClass;
	this._pilot_props.placeholder = props.placeholder == null ? "What needs doing?" : props.placeholder;
	this._pilot_props.value = props.value;
	this._pilot_props.save = props.save;
	this._pilot_props.onAttached = props.onAttached;
	this._pilot_props.onDetached = props.onDetached;
};
todo_ui_TodoInput.__name__ = true;
todo_ui_TodoInput.__super__ = pilot_StatelessWidget;
todo_ui_TodoInput.prototype = $extend(pilot_StatelessWidget.prototype,{
	build: function() {
		var _gthis = this;
		var children = [pilot__$VNode_VNode_$Impl_$._new({ name : "input", props : { className : this._pilot_props.inputClass, value : this._pilot_props.value, placeholder : this._pilot_props.placeholder, onKeyDown : function(e) {
			var input = e.target;
			if(e.key == "Enter") {
				_gthis._pilot_props.save(input.value);
				input.value = "";
				input.blur();
			}
			return;
		}}, children : []})];
		return pilot__$StyledWidget_StyledWidget_$Impl_$._new({ compose : ["_c_6PIe2WTIiWUb1tBHB0ex"], child : pilot__$VNode_VNode_$Impl_$._new({ name : "div", props : { className : "todo-input"}, children : children != null ? children : []})});
	}
	,attached: function(vnode) {
		if(vnode.node != null) {
			vnode.node.focus();
		}
		if(this._pilot_props.onAttached != null) {
			this._pilot_props.onAttached();
		}
	}
	,detached: function() {
		if(this._pilot_props.onDetached != null) {
			this._pilot_props.onDetached();
		}
	}
});
var todo_ui_TodoItem = function(props) {
	this._pilot_props = { };
	this._pilot_props.todo = props.todo;
	this._pilot_props.store = props.store;
	this._pilot_props.editing = props.editing == null ? false : props.editing;
};
todo_ui_TodoItem.__name__ = true;
todo_ui_TodoItem.__super__ = pilot_StatefulWidget;
todo_ui_TodoItem.prototype = $extend(pilot_StatefulWidget.prototype,{
	build: function() {
		var _gthis = this;
		var tmp = ["_c_vVKeC6XR1uWJ6bXYzQT4",this._pilot_props.todo.complete ? "_c_qxEQPCzQ5Lx7OVaToljF" : null];
		var tmp1;
		switch(this._pilot_props.editing) {
		case false:
			var props = { key : this._pilot_props.todo.id, id : "Todo-" + this._pilot_props.todo.id, className : "todo-item", onDblClick : function(e) {
				return _gthis.set_editing(true);
			}};
			var props1 = { type : "_c_R6WH6Eu1nUwoQyF6rMAp", checked : this._pilot_props.todo.complete, onClick : function(e1) {
				switch(_gthis._pilot_props.todo.complete) {
				case false:
					_gthis._pilot_props.store.markComplete(_gthis._pilot_props.todo);
					break;
				case true:
					_gthis._pilot_props.store.markPending(_gthis._pilot_props.todo);
					break;
				}
				return;
			}};
			var this1 = pilot__$VNode_VNode_$Impl_$._new({ name : "input", props : { type : "checkbox", className : props1.type, checked : props1.checked, id : props1.id, onClick : props1.onClick}, children : []});
			var children = [pilot__$VNode_VNode_$Impl_$._new({ name : this._pilot_props.todo.content, props : { }, type : pilot_VNodeType.VNodeText, node : null})];
			var children1 = [this1,pilot__$VNode_VNode_$Impl_$._new({ name : "label", props : { }, children : children != null ? children : []}),pilot__$VNode_VNode_$Impl_$._new({ name : "button", props : { className : "destroy", onClick : function(e2) {
				_gthis._pilot_props.store.removeTodo(_gthis._pilot_props.todo);
				return;
			}}, children : []})];
			tmp1 = pilot__$VNode_VNode_$Impl_$._new({ name : "li", props : props, children : children1 != null ? children1 : []});
			break;
		case true:
			var props2 = { className : "todo-item editing", key : this._pilot_props.todo.id, id : "Todo-" + this._pilot_props.todo.id, onClick : function(e3) {
				return e3.stopPropagation();
			}};
			var children2 = [new todo_ui_TodoInput({ value : this._pilot_props.todo.content, onAttached : function() {
				var clickOffListener = null;
				clickOffListener = function(e4) {
					console.log("example/todo/ui/TodoItem.hx:109:","click");
					_gthis.set_editing(false);
					window.removeEventListener("click",clickOffListener);
				};
				window.addEventListener("click",clickOffListener);
				return;
			}, save : function(value) {
				_gthis._pilot_props.todo.content = value;
				return _gthis.set_editing(false);
			}}).render()];
			tmp1 = pilot__$VNode_VNode_$Impl_$._new({ name : "li", props : props2, children : children2 != null ? children2 : []});
			break;
		}
		return pilot__$StyledWidget_StyledWidget_$Impl_$._new({ compose : tmp, child : tmp1});
	}
	,set_editing: function(value) {
		this._pilot_props.editing = value;
		this.patch();
		return value;
	}
	,__properties__: {set_editing:"set_editing"}
});
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
todo_data_Todo.ids = 0;
TodoApp.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
